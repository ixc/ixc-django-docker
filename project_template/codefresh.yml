version: '1.0'

steps:
  main_clone:
    type: git-clone
    repo: ixc/project_template
    revision: '${{CF_REVISION}}'

  build_image:
    type: build
    image_name: interaction/project_template

  # Run tests and push built image in parallel
  in_parallel:
    type: parallel
    steps:

      # Push UNTESTED image to improve caching (not to be used directly)
      push_untested_image:
        candidate: '${{build_image}}'
        type: push
        tag: 'untested-${{CF_REVISION}}'

      run_tests:
        type: composition
        composition:
          version: '2'

          services:
            django:
              depends_on:
                # - elasticsearch
                - postgres
                - redis
              environment:
                DOTENV: test
                # ELASTICSEARCH_ADDRESS: elasticsearch:9200
                PGHOST: postgres
                PGUSER: postgres
                REDIS_ADDRESS: redis:6379
              image: '${{build_image}}'

            # elasticsearch:
            #   image: interaction/elasticsearch-icu:7-alpine

            postgres:
              environment:
                POSTGRES_HOST_AUTH_METHOD: trust
              image: postgres:12.2-alpine

            redis:
              image: redis:6-alpine

          volumes:
            # elasticsearch-data:
            postgres-data:
            redis-data:

        composition_candidates:
          django:
            command: runtests.sh --failfast .
        when:
          condition:
            all:
              skip_tests_variable: lower('${{CF_SKIP_TESTS}}') != 'true'

  push_images:
    candidate: '${{build_image}}'
    type: push
    scale:
      push_branch_tag:
        tag: '${{CF_BRANCH_TAG_NORMALIZED}}'
      push_commit_tag:
        tag: '${{CF_REVISION}}'
      push_latest_tag:
        tag: latest
        when:
          branch:
            only:
              - master
